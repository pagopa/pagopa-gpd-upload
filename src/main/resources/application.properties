info.application.artifactId=${project.artifactId}
info.application.version=${project.version}
openapi.application.version=0.1.22
info.properties.environment=env
micronaut.application.name=GPD-Massive-Upload-service
micronaut.router.static-resources.swagger.paths=classpath:META-INF/swagger
micronaut.router.static-resources.swagger.mapping=/swagger/**
micronaut.router.static-resources.swagger-ui.paths=classpath:META-INF/swagger/views/swagger-ui
micronaut.router.static-resources.swagger-ui.mapping=/swagger-ui/**
micronaut.openapi.json.format=true
micronaut.server.multipart.maxFileSize=104857600
micronaut.server.max-request-size=104857600
micronaut.server.max-request-size.multipart.max-file-size=104857600

# openapi groups
micronaut.openapi.groups.external.primary=true
micronaut.openapi.groups.external.filename=pagopa-gpd-upload-${openapi.application.version}
micronaut.openapi.groups.external.display-name=GPD-Upload-API
micronaut.openapi.groups.external.packages=it.gov.pagopa.gpd.upload.controller.*
micronaut.openapi.groups.external.packages-exclude[0]=com.micronaut.controller.support.*
micronaut.openapi.groups.internal.primary=false
micronaut.openapi.groups.internal.display-name=GPD-Upload-Support-API
micronaut.openapi.groups.internal.filename=pagopa-gpd-upload-support
micronaut.openapi.groups.internal.packages=it.gov.pagopa.gpd.upload.controller.*

blob.sas.connection=${BLOB_CONNECTION_STRING}
blob.container.input=gpd-upload/input
zip.content.size=104857600
zip.entries=1

cosmos.uri=${COSMOS_URI}
cosmos.key=${COSMOS_KEY}
cosmos.database.name=${DB_NAME}
cosmos.container.name=${CONTAINER_NAME}

post.file.response.headers.retry_after.millis=${POST_FILE_RETRY_AFTER}

log.level=${LOG_LEVEL} 

## HTTP CLIENT
gpd.client.url=${GPD_API_URL}

## SCHEDULED JOB
cron.recovery.rate=${CRON_RECOVERY_RATE}

